name: GitHub Copilot Agent Integration

on:
  workflow_run:
    workflows: ["Deploy Forestech to Firebase"]
    types:
      - completed
  workflow_call:
    inputs:
      error_context_file:
        description: 'Path to error context JSON file'
        required: false
        type: string
        default: 'error-context.json'
  workflow_dispatch:
    inputs:
      error_context:
        description: 'Error context for Copilot Agent'
        required: false
        default: ''

permissions:
  contents: read
  issues: write
  pull-requests: write
  actions: read

jobs:
  copilot-analysis:
    name: Copilot Agent Analysis
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' || github.event_name == 'workflow_dispatch' }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: ü§ñ Create and Auto-Assign Issue to Copilot Agent
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          try {
            const issueBody = `## ü§ñ Copilot Agent Auto-Assignment
            
            This issue was automatically created and assigned to GitHub Copilot Agent
            to fix Forestech build system errors automatically.
            
            ### Task
            Please create a pull request to fix all detected build and lint errors.
            
            ### Requirements
            1. Fix all lint and build errors detected by the system
            2. Maintain existing code patterns and quality standards
            3. Preserve React/Vite/Firebase monorepo structure
            4. Create clean, tested solutions for each error
            5. Generate pull request with detailed description
            
            @github-copilot Please analyze the build failures and create a comprehensive pull request with fixes.
            
            ---
            Auto-generated by GitHub Copilot Agent Integration`;
            
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `ü§ñ Copilot Agent Auto-Fix - Build System Improvements`,
              body: issueBody,
              labels: ['copilot-agent', 'build-improvement', 'automation']
            });
            
            console.log(`‚úÖ Issue created and assigned: #${issue.data.number}`);
            
          } catch (error) {
            console.log(`‚ùå Failed to create issue: ${error.message}`);
          }

    - name: üöÄ Success Summary
      run: |
        echo "‚úÖ GitHub Copilot Agent integration completed successfully!"
        echo "ü§ñ Issue created and assigned to Copilot Agent for automated fixes"
