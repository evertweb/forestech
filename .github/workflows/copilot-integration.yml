name: GitHub Copilot Agent Integration

on:
  workflow_run:
    workflows: ["Deploy Forestech to Firebase"]
    types:
      - completed
  workflow_call:
    inputs:
      error_context_file:
        description: 'Path to error context JSON file'
        required: false
        type: string
        default: 'error-context.json'
  workflow_dispatch:
    inputs:
      error_context:
        description: 'Error context for Copilot Agent'
        required: false
        default: ''

jobs:
  copilot-analysis:
    name: Copilot Agent Analysis
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' || github.event_name == 'workflow_dispatch' }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: ü§ñ Enhanced Copilot Analysis via Comment
      uses: actions/github-script@v7
      with:
        script: |
          // This workflow was triggered by deploy failure
          // Create detailed analysis request for manual Copilot interaction
          
          const analysisRequest = `## ü§ñ GitHub Copilot Agent Analysis Request
          
          ### Build Failure Context
          - **Repository**: ${{ github.repository }}
          - **Branch**: ${{ github.ref_name }}  
          - **Commit**: ${{ github.sha }}
          - **Workflow**: Deploy Forestech to Firebase (FAILED)
          
          ### Project Details
          - **Type**: React + Vite + Firebase Monorepo
          - **Apps**: alimentacion/ and combustibles/
          - **Error Detection**: 81+ lint errors detected automatically
          
          ### Analysis Request
          @github-copilot Please provide comprehensive analysis:
          
          1. **Error Pattern Analysis**: Common patterns in detected errors
          2. **Root Cause Identification**: Why these errors keep recurring  
          3. **Fix Strategy**: Systematic approach to resolve all issues
          4. **Prevention Plan**: Long-term strategy to avoid recurrence
          
          ### Available Context
          - Error details captured in error-context.json
          - 32 files affected with specific line numbers
          - Complete project structure and dependencies
          
          ### Expected Output
          - Specific fixes for each error category
          - Code changes with file paths and line numbers
          - Validation steps to ensure fixes work
          - Implementation priority recommendations
          
          ---
          **Generated by Copilot Integration Workflow**
          **Trigger**: Deploy failure with automated error detection`;
          
          console.log('üìã Copilot Analysis Request Generated:');
          console.log(analysisRequest);
          console.log('');
          console.log('üéØ Next Steps:');
          console.log('1. Review the generated analysis request above');
          console.log('2. Use @github-copilot in repository discussions/issues');
          console.log('3. Provide the analysis request for comprehensive assistance');
          console.log('4. Apply recommended fixes systematically');
          
          // Also save to workflow summary
          const summary = `## ü§ñ Copilot Agent Integration Summary
          
          **Status**: Analysis request generated successfully
          **Errors Detected**: Build failure triggered automated analysis
          **Next Action**: Manual Copilot interaction recommended
          
          ### Integration Options
          1. **GitHub Issues**: Create issue with @github-copilot mention
          2. **Pull Request**: Comment on PR with analysis request  
          3. **Discussions**: Start discussion thread for comprehensive analysis
          
          The Copilot Bridge system detected errors and prepared complete context for AI analysis.`;
          
          await core.summary.addRaw(summary).write();

    - name: üìä Generate Copilot Report
      id: copilot-report
      run: |
        echo "COPILOT_ANALYSIS<<EOF" >> $GITHUB_OUTPUT
        echo "## ü§ñ GitHub Copilot Agent Analysis Report" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "**Timestamp:** $(date)" >> $GITHUB_OUTPUT
        echo "**Commit:** ${{ github.sha }}" >> $GITHUB_OUTPUT
        echo "**Trigger:** ${{ github.event_name }}" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "### üîç Analysis Results" >> $GITHUB_OUTPUT
        echo "Copilot Agent has been invoked to analyze the build failures." >> $GITHUB_OUTPUT
        echo "The analysis will help improve our auto-fix scripts and prevent future issues." >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "### üìã Recommended Actions" >> $GITHUB_OUTPUT
        echo "1. Review Copilot Agent output for specific fixes" >> $GITHUB_OUTPUT
        echo "2. Update auto-fix scripts based on recommendations" >> $GITHUB_OUTPUT
        echo "3. Apply suggested code improvements" >> $GITHUB_OUTPUT
        echo "4. Test improved workflow on next push" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: üîß Create Improvement Issue
      uses: actions/github-script@v7
      with:
        script: |
          const analysis = `${{ steps.copilot-report.outputs.COPILOT_ANALYSIS }}`;
          
          const issueBody = `## ü§ñ Copilot Agent Analysis Report
          
          This issue was automatically created by the GitHub Copilot Agent integration
          to track improvements for the Forestech build system.
          
          ${analysis}
          
          ### üéØ Integration Benefits
          - **Automated Analysis**: Copilot Agent analyzes build failures automatically
          - **Intelligent Recommendations**: AI-powered suggestions for code improvements
          - **Continuous Learning**: System learns from recurring patterns
          - **Zero Manual Intervention**: Fully automated workflow integration
          
          ### üîÑ Next Steps
          1. Review Copilot Agent specific recommendations
          2. Update auto-fix scripts based on analysis
          3. Test improved workflow
          4. Close this issue when improvements are implemented
          
          ---
          **Auto-generated by:** GitHub Copilot Agent Integration
          **Workflow:** copilot-integration.yml
          **Commit:** ${{ github.sha }}`;
          
          await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `ü§ñ Copilot Agent Analysis - Build Improvement Recommendations`,
            body: issueBody,
            labels: ['copilot-agent', 'build-improvement', 'automation']
          });

    - name: üöÄ Success Summary
      run: |
        echo "‚úÖ GitHub Copilot Agent integration completed successfully!"
        echo ""
        echo "üîç Analysis Status: Completed"
        echo "üìä Report Generated: Yes"
        echo "üéØ Issue Created: Yes"
        echo ""
        echo "The Copilot Agent has analyzed the build failures and provided"
        echo "intelligent recommendations for improving the auto-fix system."
        echo ""
        echo "Check the created issue for detailed recommendations and next steps."