rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Reglas para la estructura artifacts/{app_id}/users/{user_id}
    match /artifacts/{app_id}/users/{user_id} {
      // Permitir lectura y escritura al propio usuario
      allow read, write: if request.auth != null && request.auth.uid == user_id;
      
      // Permitir lectura y escritura a admins
      allow read, write: if request.auth != null && 
        exists(/databases/$(database)/documents/artifacts/$(app_id)/users/$(request.auth.uid)/profile/data) &&
        get(/databases/$(database)/documents/artifacts/$(app_id)/users/$(request.auth.uid)/profile/data).data.role == 'admin';
      
      // Subcoleción profile
      match /profile/{document} {
        // Permitir lectura y escritura al propio usuario
        allow read, write: if request.auth != null && request.auth.uid == user_id;
        
        // Permitir lectura y escritura a admins
        allow read, write: if request.auth != null && 
          exists(/databases/$(database)/documents/artifacts/$(app_id)/users/$(request.auth.uid)/profile/data) &&
          get(/databases/$(database)/documents/artifacts/$(app_id)/users/$(request.auth.uid)/profile/data).data.role == 'admin';
      }
      
      // Subcoleción settlements (liquidaciones)
      match /settlements/{settlement_id} {
        // Permitir lectura y escritura al propio usuario
        allow read, write: if request.auth != null && request.auth.uid == user_id;
        
        // Permitir lectura a admins y contadores
        allow read: if request.auth != null && 
          exists(/databases/$(database)/documents/artifacts/$(app_id)/users/$(request.auth.uid)/profile/data) &&
          get(/databases/$(database)/documents/artifacts/$(app_id)/users/$(request.auth.uid)/profile/data).data.role in ['admin', 'contador'];
      }
      
      // Subcoleción fcm (tokens de notificaciones)
      match /fcm/{document} {
        // Permitir lectura y escritura al propio usuario
        allow read, write: if request.auth != null && request.auth.uid == user_id;
        
        // Permitir lectura a admins
        allow read: if request.auth != null && 
          exists(/databases/$(database)/documents/artifacts/$(app_id)/users/$(request.auth.uid)/profile/data) &&
          get(/databases/$(database)/documents/artifacts/$(app_id)/users/$(request.auth.uid)/profile/data).data.role == 'admin';
      }
    }
    
    // Permitir a usuarios autenticados crear su perfil inicial
    match /artifacts/{app_id}/users/{user_id}/profile/data {
      allow create: if request.auth != null && request.auth.uid == user_id;
    }
    
    // Reglas para lectura de la colección de usuarios (solo admins)
    match /artifacts/{app_id}/users {
      allow list: if request.auth != null && 
        exists(/databases/$(database)/documents/artifacts/$(app_id)/users/$(request.auth.uid)/profile/data) &&
        get(/databases/$(database)/documents/artifacts/$(app_id)/users/$(request.auth.uid)/profile/data).data.role == 'admin';
    }
    
    // Reglas para invitaciones - Sistema de códigos únicos para registro seguro
    match /artifacts/{app_id}/invitations/{invitation_id} {
      // Solo admins pueden crear, leer todas y cancelar invitaciones
      allow read, write: if request.auth != null && 
        exists(/databases/$(database)/documents/artifacts/$(app_id)/users/$(request.auth.uid)/profile/data) &&
        get(/databases/$(database)/documents/artifacts/$(app_id)/users/$(request.auth.uid)/profile/data).data.role == 'admin';
      
      // Permitir lectura pública solo para validación durante registro
      // (usuarios no autenticados necesitan validar códigos)
      allow read: if request.auth == null && 
        resource.data.status == 'pending' &&
        resource.data.expiresAt.toMillis() > request.time.toMillis();
        
      // Permitir actualización pública solo para marcar como usada durante registro
      allow update: if request.auth == null && 
        resource.data.status == 'pending' &&
        request.resource.data.status == 'used' &&
        resource.data.expiresAt.toMillis() > request.time.toMillis();
    }
    
    // Reglas para listar invitaciones (solo admins)
    match /artifacts/{app_id}/invitations {
      allow list: if request.auth != null && 
        exists(/databases/$(database)/documents/artifacts/$(app_id)/users/$(request.auth.uid)/profile/data) &&
        get(/databases/$(database)/documents/artifacts/$(app_id)/users/$(request.auth.uid)/profile/data).data.role == 'admin';
    }
    
    // ===== REGLAS PARA COMBUSTIBLES =====
    
    // Función helper para verificar rol de usuario
    function getUserRole() {
      return get(/databases/$(database)/documents/artifacts/$(app_id)/users/$(request.auth.uid)).data.role;
    }
    
    function isAdmin() {
      return request.auth != null && getUserRole() == 'admin';
    }
    
    function isCounterOrAbove() {
      return request.auth != null && getUserRole() in ['admin', 'contador'];
    }
    
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Reglas para inventario de combustibles
    match /artifacts/{app_id}/combustibles/inventory/{inventory_id} {
      // Admins y contadores pueden gestionar inventario
      allow read, write: if isCounterOrAbove();
      
      // Clientes solo pueden leer inventario
      allow read: if isAuthenticated();
    }
    
    // Reglas para movimientos de combustibles
    match /artifacts/{app_id}/combustibles/movements/{movement_id} {
      // Todos los usuarios autenticados pueden crear movimientos
      allow create: if isAuthenticated() && request.auth.uid == request.resource.data.createdBy;
      
      // Solo el creador puede leer sus propios movimientos
      allow read: if isAuthenticated() && request.auth.uid == resource.data.createdBy;
      
      // Admins y contadores pueden ver todos los movimientos
      allow read: if isCounterOrAbove();
      
      // Solo admins y contadores pueden modificar movimientos
      allow update, delete: if isCounterOrAbove();
    }
    
    // Reglas para vehículos
    match /artifacts/{app_id}/combustibles/vehicles/{vehicle_id} {
      // Admins pueden gestionar vehículos completamente
      allow read, write: if isAdmin();
      
      // Contadores pueden leer y crear/actualizar vehículos
      allow read, create, update: if isCounterOrAbove();
      
      // Clientes solo pueden leer vehículos
      allow read: if isAuthenticated();
    }
    
    // Reglas para proveedores
    match /artifacts/{app_id}/combustibles/suppliers/{supplier_id} {
      // Solo admins pueden gestionar proveedores
      allow read, write: if isAdmin();
      
      // Contadores pueden leer proveedores
      allow read: if isCounterOrAbove();
    }
    
    // Reglas para configuraciones de combustibles
    match /artifacts/{app_id}/combustibles/settings/{setting_id} {
      // Solo admins pueden modificar configuraciones
      allow read, write: if isAdmin();
      
      // Contadores pueden leer configuraciones
      allow read: if isCounterOrAbove();
    }
    
    // Reglas para reportes de combustibles
    match /artifacts/{app_id}/combustibles/reports/{report_id} {
      // Admins y contadores pueden gestionar reportes
      allow read, write: if isCounterOrAbove();
      
      // Clientes pueden leer reportes si son propios
      allow read: if isAuthenticated() && request.auth.uid == resource.data.createdBy;
    }
    
    // Permitir listar colecciones de combustibles según permisos
    match /artifacts/{app_id}/combustibles/inventory {
      allow list: if isAuthenticated();
    }
    
    match /artifacts/{app_id}/combustibles/movements {
      allow list: if isCounterOrAbove();
    }
    
    match /artifacts/{app_id}/combustibles/vehicles {
      allow list: if isAuthenticated();
    }
    
    match /artifacts/{app_id}/combustibles/suppliers {
      allow list: if isCounterOrAbove();
    }
    
    match /artifacts/{app_id}/combustibles/reports {
      allow list: if isCounterOrAbove();
    }
    
    // ===== REGLAS TEMPORALES PARA COMBUSTIBLES - RUTAS ACTUALES =====
    
    // Inventario de combustibles (ruta actual)
    match /combustibles_inventory/{inventory_id} {
      allow read, write: if request.auth != null;
    }
    
    // Movimientos de combustibles (ruta actual)
    match /combustibles_movements/{movement_id} {
      allow read, write: if request.auth != null;
    }
    
    // Vehículos de combustibles (ruta actual)
    match /combustibles_vehicles/{vehicle_id} {
      allow read, write: if request.auth != null;
    }
    
    // Proveedores de combustibles (ruta actual)
    match /combustibles_suppliers/{supplier_id} {
      allow read, write: if request.auth != null;
    }
    
    // Denegar acceso por defecto a todo lo demás
    match /{document=**} {
      allow read, write: if false;
    }
  }
}