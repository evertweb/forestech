#!/bin/bash

# Script para simplificar y corregir los workflows
echo "🔧 Simplifying workflows to avoid YAML syntax issues..."

# Crear versión simplificada de copilot-integration.yml
cat > .github/workflows/copilot-integration.yml << 'EOF'
name: GitHub Copilot Agent Integration

on:
  workflow_run:
    workflows: ["Deploy Forestech to Firebase"]
    types:
      - completed
  workflow_call:
    inputs:
      error_context_file:
        description: 'Path to error context JSON file'
        required: false
        type: string
        default: 'error-context.json'
  workflow_dispatch:
    inputs:
      error_context:
        description: 'Error context for Copilot Agent'
        required: false
        default: ''

permissions:
  contents: read
  issues: write
  pull-requests: write
  actions: read

jobs:
  copilot-analysis:
    name: Copilot Agent Analysis
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' || github.event_name == 'workflow_dispatch' }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: 🤖 Create and Auto-Assign Issue to Copilot Agent
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          try {
            const issueBody = `## 🤖 Copilot Agent Auto-Assignment
            
            This issue was automatically created and assigned to GitHub Copilot Agent
            to fix Forestech build system errors automatically.
            
            ### Task
            Please create a pull request to fix all detected build and lint errors.
            
            ### Requirements
            1. Fix all lint and build errors detected by the system
            2. Maintain existing code patterns and quality standards
            3. Preserve React/Vite/Firebase monorepo structure
            4. Create clean, tested solutions for each error
            5. Generate pull request with detailed description
            
            @github-copilot Please analyze the build failures and create a comprehensive pull request with fixes.
            
            ---
            Auto-generated by GitHub Copilot Agent Integration`;
            
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `🤖 Copilot Agent Auto-Fix - Build System Improvements`,
              body: issueBody,
              labels: ['copilot-agent', 'build-improvement', 'automation']
            });
            
            console.log(`✅ Issue created and assigned: #${issue.data.number}`);
            
          } catch (error) {
            console.log(`❌ Failed to create issue: ${error.message}`);
          }

    - name: 🚀 Success Summary
      run: |
        echo "✅ GitHub Copilot Agent integration completed successfully!"
        echo "🤖 Issue created and assigned to Copilot Agent for automated fixes"
EOF

echo "✅ copilot-integration.yml simplified"

# Crear versión simplificada de copilot-bridge.yml
cat > .github/workflows/copilot-bridge.yml << 'EOF'
name: Copilot Agent Bridge - Error Detection & Delegation

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      force_error_collection:
        description: 'Force error collection even if builds pass'
        required: false
        default: 'false'

permissions:
  contents: read
  issues: write
  pull-requests: write
  actions: read

jobs:
  build-and-bridge:
    name: Build Detection & Copilot Bridge
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install Dependencies
      run: |
        npm ci || echo "Root npm install failed, continuing..."
        if [ -d "alimentacion" ]; then
          cd alimentacion && npm ci && cd ..
        fi
        if [ -d "combustibles" ]; then
          cd combustibles && npm ci && cd ..
        fi

    - name: 🔍 Detect Build/Lint Errors
      id: error-detection
      run: |
        echo "Running error detection..."
        node scripts/error-collector.js
        
        if [ -f error-context.json ]; then
          ERROR_STATUS=$(node -e "console.log(JSON.parse(require('fs').readFileSync('error-context.json', 'utf8')).status)")
          echo "error-status=$ERROR_STATUS" >> $GITHUB_OUTPUT
          
          if [ "$ERROR_STATUS" = "errors_detected" ]; then
            echo "errors-found=true" >> $GITHUB_OUTPUT
            ERROR_COUNT=$(node -e "console.log(JSON.parse(require('fs').readFileSync('error-context.json', 'utf8')).summary.totalErrors)")
            echo "error-count=$ERROR_COUNT" >> $GITHUB_OUTPUT
            echo "🚨 $ERROR_COUNT errors detected - preparing for Copilot Agent"
          else
            echo "errors-found=false" >> $GITHUB_OUTPUT
            echo "✅ No errors detected"
          fi
        else
          echo "errors-found=false" >> $GITHUB_OUTPUT
          echo "❌ Error detection failed"
        fi
      continue-on-error: true

    - name: 🤖 Create and Assign Issue to Copilot Agent
      if: steps.error-detection.outputs.errors-found == 'true' || github.event.inputs.force_error_collection == 'true'
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          try {
            const fs = require('fs');
            let context = {};
            
            try {
              const contextData = fs.readFileSync('error-context.json', 'utf8');
              context = JSON.parse(contextData);
            } catch (error) {
              console.log('Could not load error context:', error.message);
              context = { summary: { totalErrors: 'Unknown' } };
            }
            
            const issueBody = `## 🚨 Automated Error Detection - Copilot Agent Assignment
            
            Build errors detected: ${context.summary?.totalErrors || 'Multiple'} errors
            
            @github-copilot Please analyze and fix the detected build/lint errors:
            
            1. Review the error-context.json file for specific error details
            2. Create targeted fixes for React/Vite/Firebase patterns
            3. Maintain existing code quality and patterns
            4. Generate a comprehensive pull request with all fixes
            
            Context: ${context.copilotPrompt || 'See error-context.json for details'}
            
            ---
            Auto-generated by Copilot Bridge System`;
            
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `🤖 Copilot Agent: Fix ${context.summary?.totalErrors || 'Multiple'} Build/Lint Errors`,
              body: issueBody,
              labels: ['copilot-agent', 'build-errors', 'automated']
            });
            
            console.log(`✅ Created and assigned issue: #${issue.data.number}`);
            
          } catch (error) {
            console.log(`❌ Failed to create issue: ${error.message}`);
          }

    - name: ✅ Standard Build & Deploy
      if: steps.error-detection.outputs.errors-found == 'false'
      run: |
        echo "No errors detected - proceeding with standard build and deploy"
        npm run build:alimentacion
        npm run build:combustibles
        
        npm install -g firebase-tools
        echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT_LIQUIDACIONAPP_62962 }}' > /tmp/service-account.json
        export GOOGLE_APPLICATION_CREDENTIALS=/tmp/service-account.json
        firebase deploy --only hosting --project liquidacionapp-62962
      env:
        VITE_FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
        VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
        VITE_FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
        VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
        VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
        VITE_FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
        VITE_FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}

    - name: 📋 Final Status Report
      if: always()
      run: |
        echo "=== COPILOT BRIDGE FINAL STATUS ==="
        echo "Errors Detected: ${{ steps.error-detection.outputs.errors-found }}"
        echo "Error Count: ${{ steps.error-detection.outputs.error-count }}"
        echo "Copilot Agent: $([ '${{ steps.error-detection.outputs.errors-found }}' = 'true' ] && echo 'Assigned' || echo 'Not needed')"
        echo "Deploy Status: $([ '${{ steps.error-detection.outputs.errors-found }}' = 'false' ] && echo 'Completed' || echo 'Pending fixes')"
EOF

echo "✅ copilot-bridge.yml simplified"
echo "🎉 Both workflows simplified and corrected!"
