#!/bin/bash

# üîß Script de Prueba: Notion MCP Server
# Forestech Colombia - 15 julio 2025
# Verifica que el servidor MCP Notion est√© funcionando correctamente

echo "üöÄ Iniciando prueba del servidor MCP Notion (GitHub Copilot)..."
echo "üìç Directorio: $(pwd)"
echo "‚è∞ Fecha: $(date)"
echo ""

# Colores para output
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# 1. Verificar que el token est√° configurado en mcp.json
echo -e "${BLUE}üìã 1. Verificando configuraci√≥n del token en mcp.json...${NC}"
TOKEN_CONFIG=$(grep -A 10 "notion" .vscode/mcp.json | grep "NOTION_API_TOKEN")
if [[ "$TOKEN_CONFIG" == *"ntn_175303559088"* ]]; then
    echo -e "${GREEN}‚úÖ Token configurado correctamente en mcp.json${NC}"
else
    echo -e "${RED}‚ùå Token no encontrado en configuraci√≥n MCP${NC}"
    echo "Verificando archivo .vscode/mcp.json..."
    cat .vscode/mcp.json | grep -A 15 "notion"
    exit 1
fi

# 2. Verificar la instalaci√≥n del paquete correcto
echo -e "${BLUE}üì¶ 2. Verificando servidor @suekou/mcp-notion-server...${NC}"
if command -v npx &> /dev/null; then
    echo -e "${GREEN}‚úÖ NPX disponible${NC}"
    
    # Intentar instalar/verificar el paquete
    echo -e "${YELLOW}üì• Instalando/verificando @suekou/mcp-notion-server...${NC}"
    npx -y @suekou/mcp-notion-server --help 2>/dev/null
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}‚úÖ Servidor Notion MCP instalado correctamente${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è Instalando servidor por primera vez...${NC}"
        npx -y @suekou/mcp-notion-server --help
    fi
else
    echo -e "${RED}‚ùå NPX no disponible${NC}"
    exit 1
fi

# 3. Verificar estructura de configuraci√≥n MCP
echo -e "${BLUE}üîß 3. Verificando estructura de configuraci√≥n MCP...${NC}"
MCP_CONFIG=".vscode/mcp.json"
if [ -f "$MCP_CONFIG" ]; then
    echo -e "${GREEN}‚úÖ Archivo mcp.json encontrado${NC}"
    
    # Verificar que el JSON es v√°lido
    if cat "$MCP_CONFIG" | python3 -m json.tool > /dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ JSON v√°lido${NC}"
    else
        echo -e "${RED}‚ùå JSON inv√°lido${NC}"
        exit 1
    fi
    
    # Mostrar configuraci√≥n actual
    echo -e "${BLUE}üìÑ Configuraci√≥n actual de Notion:${NC}"
    grep -A 12 '"notion"' "$MCP_CONFIG" | head -12
else
    echo -e "${RED}‚ùå Archivo mcp.json no encontrado${NC}"
    exit 1
fi

# 4. Verificar variables de entorno adicionales
echo -e "${BLUE}üåç 4. Verificando variables de entorno...${NC}"
export NOTION_API_TOKEN="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"
export NOTION_MARKDOWN_CONVERSION="true"
echo -e "${GREEN}‚úÖ Variables exportadas correctamente${NC}"

# 5. Test de conectividad b√°sica (si es posible)
echo -e "${BLUE}üîó 5. Informaci√≥n de herramientas disponibles...${NC}"
echo -e "${YELLOW}üìã Herramientas principales de Notion MCP:${NC}"
echo "   ‚Ä¢ notion_retrieve_page - Obtener p√°ginas"
echo "   ‚Ä¢ notion_query_database - Consultar bases de datos"
echo "   ‚Ä¢ notion_create_database_item - Crear elementos"
echo "   ‚Ä¢ notion_search - Buscar contenido"
echo "   ‚Ä¢ notion_append_block_children - A√±adir contenido"
echo "   ‚Ä¢ notion_update_page_properties - Actualizar propiedades"

# 6. Informaci√≥n adicional
echo ""
echo -e "${BLUE}üìö 6. Informaci√≥n adicional:${NC}"
echo -e "${YELLOW}üéØ Para usar en GitHub Copilot:${NC}"
echo "   @notion \"consulta mi base de datos de proyectos\""
echo "   @notion \"crea una nueva p√°gina para el proyecto X\""
echo "   @notion \"busca documentaci√≥n sobre Y\""
echo ""
echo -e "${YELLOW}üîß Configuraci√≥n aplicada:${NC}"
echo "   ‚Ä¢ Servidor: @suekou/mcp-notion-server"
echo "   ‚Ä¢ Conversi√≥n Markdown: activada (reduce tokens)"
echo "   ‚Ä¢ Token: configurado y oculto por seguridad"
echo ""
echo -e "${GREEN}üéâ Prueba completada exitosamente!${NC}"
echo -e "${BLUE}üí° Reinicia VS Code para aplicar la nueva configuraci√≥n MCP${NC}"
